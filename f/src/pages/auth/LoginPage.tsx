// f/src/pages/auth/LoginPage.tsx
// ===============================================
// üîê –û–ë–ù–û–í–õ–ï–ù–ù–´–ô LOGIN PAGE –° –°–£–©–ï–°–¢–í–£–Æ–©–ò–ú LOGIN FORM
// ===============================================

import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import LoginForm from '../../components/auth/LoginForm';

const LoginPage: React.FC = () => {
  const navigate = useNavigate();
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState('');

  // üéØ –ü—Ä–æ—Å—Ç—ã–µ —Ç–µ—Å—Ç–æ–≤—ã–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
  const testUsers = [
    { email: 'admin@solar.com', password: '123456', role: 'admin' },
    { email: 'test@solar.com', password: '123456', role: 'user' },
    { email: 'demo@solar.com', password: '123456', role: 'demo' }
  ];

  const handleLogin = async (email: string, password: string) => {
    setLoading(true);
    setError('');

    try {
      console.log('üîê Login attempt:', { email });

      // –ò–º–∏—Ç–∏—Ä—É–µ–º –∑–∞–¥–µ—Ä–∂–∫—É —Å–µ—Ç–∏
      await new Promise(resolve => setTimeout(resolve, 500));

      // üéØ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
      const user = testUsers.find(u => u.email === email && u.password === password);
      
      if (!user) {
        throw new Error('–ù–µ–≤–µ—Ä–Ω—ã–π email –∏–ª–∏ –ø–∞—Ä–æ–ª—å');
      }

      // üéØ –°–æ–∑–¥–∞–µ–º —Ç–æ–∫–µ–Ω
      const token = btoa(JSON.stringify({
        email: user.email,
        role: user.role,
        timestamp: Date.now(),
        expires: Date.now() + (24 * 60 * 60 * 1000) // 24 —á–∞—Å–∞
      }));

      // ÔøΩÔøΩ –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ (—Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å–æ —Å—Ç–∞—Ä—ã–º –∏ –Ω–æ–≤—ã–º –∫–æ–¥–æ–º)
      localStorage.setItem('auth_token', `Bearer ${token}`);
      localStorage.setItem('token', token); // –î–ª—è —Å—Ç–∞—Ä–æ–≥–æ –∫–æ–¥–∞
      localStorage.setItem('user_email', user.email);
      localStorage.setItem('user_role', user.role);

      console.log('‚úÖ Login successful!');
      
      // ÔøΩÔøΩ –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ –∫–æ–º–ø–∞–Ω–∏–∏
      localStorage.removeItem('current_company_id');
      localStorage.removeItem('lastUsedCompanyId');

      // üöÄ –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ Account Dashboard
      navigate('/account/dashboard');

    } catch (error: any) {
      console.error('‚ùå Login failed:', error);
      setError(error.message || '–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞ –≤ —Å–∏—Å—Ç–µ–º—É');
    } finally {
      setLoading(false);
    }
  };

  // üéØ –ë—ã—Å—Ç—Ä—ã–π –ª–æ–≥–∏–Ω –¥–ª—è –¥–µ–º–æ
  const quickLogin = (email: string, password: string) => {
    handleLogin(email, password);
  };

  return (
    <div className="min-h-screen bg-gray-100 flex flex-col">
      {/* Header Navigation */}
      <nav className="bg-white shadow p-4 flex justify-between items-center">
        <div className="text-2xl font-bold text-blue-600">SOLAR ERP</div>
        <div className="flex space-x-4">
          <a href="#" className="text-gray-600 hover:text-blue-600">Product</a>
          <a href="#" className="text-gray-600 hover:text-blue-600">Integrations</a>
          <a href="#" className="text-gray-600 hover:text-blue-600">Training</a>
          <a href="#" className="text-gray-600 hover:text-blue-600">Prices</a>
        </div>
      </nav>

      {/* Main Content */}
      <div className="flex-grow flex items-center justify-center px-4">
        <div className="max-w-md w-full">
          
          {/* Login Card */}
          <div className="bg-white rounded-2xl shadow-xl p-8">
            {/* Header */}
            <div className="text-center mb-8">
              <div className="w-16 h-16 bg-gradient-to-r from-orange-400 to-orange-600 rounded-full flex items-center justify-center mx-auto mb-4">
                <span className="text-white text-2xl font-bold">‚òÄÔ∏è</span>
              </div>
              <h1 className="text-3xl font-bold text-gray-800 mb-2">–í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É</h1>
              <p className="text-gray-600">Multi-Tenant Architecture</p>
            </div>

            {/* Error Message */}
            {error && (
              <div className="mb-6 bg-red-50 border border-red-200 text-red-600 px-4 py-3 rounded-lg text-sm">
                <strong>–û—à–∏–±–∫–∞:</strong> {error}
              </div>
            )}

            {/* Login Form */}
            <div className="flex justify-center mb-6">
              <LoginForm onLogin={handleLogin} isLoading={loading} />
            </div>

            {/* Quick Login Buttons */}
            <div className="pt-6 border-t border-gray-200">
              <p className="text-sm text-gray-600 text-center mb-4">–ë—ã—Å—Ç—Ä—ã–π –¥–µ–º–æ-–≤—Ö–æ–¥:</p>
              <div className="space-y-2">
                <button
                  onClick={() => quickLogin('admin@solar.com', '123456')}
                  disabled={loading}
                  className="w-full bg-gray-100 hover:bg-gray-200 text-gray-800 py-2 px-4 rounded-lg transition-colors text-sm disabled:opacity-50"
                >
                  üë®‚Äçüíº –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä (admin@solar.com)
                </button>
                <button
                  onClick={() => quickLogin('test@solar.com', '123456')}
                  disabled={loading}
                  className="w-full bg-gray-100 hover:bg-gray-200 text-gray-800 py-2 px-4 rounded-lg transition-colors text-sm disabled:opacity-50"
                >
                  üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å (test@solar.com)
                </button>
                <button
                  onClick={() => quickLogin('demo@solar.com', '123456')}
                  disabled={loading}
                  className="w-full bg-gray-100 hover:bg-gray-200 text-gray-800 py-2 px-4 rounded-lg transition-colors text-sm disabled:opacity-50"
                >
                  üéØ –î–µ–º–æ-–¥–æ—Å—Ç—É–ø (demo@solar.com)
                </button>
              </div>
            </div>

            {/* Test Credentials Info */}
            <div className="mt-6 p-4 bg-blue-50 rounded-lg">
              <h4 className="text-sm font-medium text-blue-800 mb-2">ÔøΩÔøΩ –¢–µ—Å—Ç–æ–≤—ã–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:</h4>
              <div className="text-xs text-blue-700 space-y-1">
                <p>‚Ä¢ Email: <strong>admin@solar.com</strong> | –ü–∞—Ä–æ–ª—å: <strong>123456</strong></p>
                <p>‚Ä¢ Email: <strong>test@solar.com</strong> | –ü–∞—Ä–æ–ª—å: <strong>123456</strong></p>
                <p>‚Ä¢ Email: <strong>demo@solar.com</strong> | –ü–∞—Ä–æ–ª—å: <strong>123456</strong></p>
              </div>
            </div>
          </div>

          {/* Register Link */}
          <div className="text-center mt-6">
            <p className="text-gray-600 text-sm">
              –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞?{' '}
              <button
                onClick={() => navigate('/auth/register')}
                className="text-blue-600 hover:text-blue-700 font-medium"
              >
                –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
              </button>
            </p>
          </div>
        </div>
      </div>

      {/* Footer */}
      <div className="bg-white p-4 text-center text-sm text-gray-500">
        <p>&copy; 2025 Solar ERP. –î–≤—É—Ö—É—Ä–æ–≤–Ω–µ–≤–∞—è –º—É–ª—å—Ç–∏-—Ç–µ–Ω–∞–Ω—Ç–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞.</p>
      </div>
    </div>
  );
};

export default LoginPage;
