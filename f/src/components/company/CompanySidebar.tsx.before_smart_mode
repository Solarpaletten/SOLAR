// 🎈 Family-Friendly Sidebar для работающих мам
import React, { useState, useEffect } from 'react';
import { NavLink, useLocation } from 'react-router-dom';
import { ChevronDown, ChevronRight, Star, Heart, Gift } from 'lucide-react';

interface SidebarItem {
  icon: string;
  title: string;
  route: string;
  expandable?: boolean;
  badge?: string;
  isPinned?: boolean;
  subItems?: SidebarItem[];
}

const CompanySidebar: React.FC = () => {
  const location = useLocation();
  const [isDarkMode, setIsDarkMode] = useState(false);
  const [showChildrenCorner, setShowChildrenCorner] = useState(false);
  const [currentTime, setCurrentTime] = useState(new Date());

  // 🎈 Проверяем семейные праздники
  const getFamilyHoliday = () => {
    const today = new Date();
    const month = today.getMonth() + 1;
    const day = today.getDate();
    
    if (month === 3 && day === 8) return "🌸 8 Марта - День женщин!";
    if (month === 6 && day === 16) return "👨‍👧‍👦 День отца в Германии!";
    if (month === 12 && day >= 24 && day <= 26) return "🎄 Рождество семьи!";
    if (month === 1 && day === 1) return "🎊 Новый год семьи!";
    return null;
  };

  // 🌙 Обновляем время каждую минуту
  useEffect(() => {
    const timer = setInterval(() => {
      const now = new Date();
      setCurrentTime(now);
      
      // Автоматическая темная тема вечером
      const hour = now.getHours();
      if (hour >= 18 || hour <= 6) {
        setIsDarkMode(true);
      } else {
        setIsDarkMode(false);
      }
    }, 60000);

    return () => clearInterval(timer);
  }, []);

  const sidebarItems: SidebarItem[] = [
    { 
      icon: "⭐", 
      title: "Dashboard", 
      route: "/dashboard", 
      isPinned: true
    },
    { 
      icon: "👥", 
      title: "Clients", 
      route: "/clients"
    },
    {
      icon: "📦",
      title: "Warehouse",
      route: "/warehouse",
      expandable: true,
      subItems: [
        { icon: "📋", title: "Inventory", route: "/warehouse/inventory" },
        { icon: "📊", title: "Stock Report", route: "/warehouse/stock" },
        { icon: "🔄", title: "Movements", route: "/warehouse/movements" },
      ]
    },
    {
      icon: "💰",
      title: "Sales", 
      route: "/sales",
      expandable: true,
      subItems: [
        { icon: "💳", title: "New Sale", route: "/sales/new" },
        { icon: "📋", title: "Orders", route: "/sales/orders" },
        { icon: "📊", title: "Analytics", route: "/sales/analytics" },
      ]
    },
    {
      icon: "🛒",
      title: "Purchases",
      route: "/purchases", 
      expandable: true,
      subItems: [
        { icon: "➕", title: "New Purchase", route: "/purchases/new" },
        { icon: "📋", title: "Orders", route: "/purchases/orders" },
        { icon: "👥", title: "Suppliers", route: "/purchases/suppliers" },
      ]
    },
    { 
      icon: "⚡", 
      title: "TAB-Бухгалтерия", 
      route: "/tabbook",
      badge: "NEW"
    },
    { 
      icon: "☁️", 
      title: "Cloud IDE", 
      route: "/cloudide",
      badge: "BETA"
    },
    { 
      icon: "⚙️", 
      title: "Settings", 
      route: "/settings", 
      isPinned: true 
    }
  ];

  const holiday = getFamilyHoliday();

  return (
    <div className={`w-64 h-screen flex flex-col transition-all duration-300 ${
      isDarkMode ? 'bg-gray-900 text-gray-100' : 'bg-[#0f3c4c] text-white'
    }`}>
      
      {/* 🎊 Праздничный баннер */}
      {holiday && (
        <div className="bg-gradient-to-r from-pink-500 to-purple-500 p-2 text-center text-sm font-semibold animate-pulse">
          {holiday}
        </div>
      )}

      {/* Логотип Solar */}
      <NavLink
        to="/account/dashboard"
        className={`block p-4 text-2xl font-bold transition-colors text-white ${
          isDarkMode ? 'bg-gray-800 hover:bg-gray-700' : 'bg-[#0a2e3b] hover:opacity-90'
        }`}
      >
        Solar {holiday && <Gift className="inline w-5 h-5 ml-2" />}
      </NavLink>

      {/* 🎈 Children's Corner Button */}
      <button
        onClick={() => setShowChildrenCorner(!showChildrenCorner)}
        className={`w-full p-3 text-left transition-colors border-b ${
          isDarkMode 
            ? 'bg-purple-800 hover:bg-purple-700 border-purple-600' 
            : 'bg-pink-600 hover:bg-pink-500 border-pink-500'
        }`}
      >
        <span className="mr-2">🎈</span>
        <span className="text-sm font-medium">Детский уголок</span>
        <Heart className="inline w-4 h-4 ml-auto" />
      </button>

      {/* 🎮 Children's Corner */}
      {showChildrenCorner && (
        <div className={`p-4 text-center transition-all duration-300 ${
          isDarkMode ? 'bg-purple-900' : 'bg-pink-100 text-purple-800'
        }`}>
          <div className="space-y-2">
            <div className="text-2xl animate-bounce">🧸</div>
            <div className="text-xs font-medium">
              Мама работает<br/>
              Скоро поиграем! 💝
            </div>
            <div className="flex justify-center space-x-2 text-lg">
              🎀 🦄 🌈 ⭐ 🎨
            </div>
            <div className="text-xs opacity-75">
              {currentTime.toLocaleTimeString('ru', { 
                hour: '2-digit', 
                minute: '2-digit' 
              })}
            </div>
          </div>
        </div>
      )}

      {/* Main Navigation */}
      <nav className="flex-1 overflow-y-auto">
        <ul className="p-0 m-0 list-none">
          {sidebarItems.map((item) => {
            const isActive = location.pathname === item.route;
            const [isExpanded, setIsExpanded] = useState(false);
            
            return (
              <li key={item.route}>
                <div className="relative">
                  {item.isPinned && (
                    <Star className={`absolute left-2 top-3 w-3 h-3 ${
                      isDarkMode ? 'text-yellow-400' : 'text-yellow-300'
                    }`} />
                  )}
                  
                  <NavLink
                    to={item.route}
                    onClick={(e) => {
                      if (item.expandable) {
                        e.preventDefault();
                        setIsExpanded(!isExpanded);
                      }
                    }}
                    className={`flex items-center p-3 transition-colors ${
                      item.isPinned ? 'pl-8' : 'pl-4'
                    } ${
                      isActive
                        ? isDarkMode 
                          ? 'bg-gray-700 text-white' 
                          : 'bg-[#165468] text-white'
                        : isDarkMode
                          ? 'text-gray-300 hover:bg-gray-700 hover:text-white'
                          : 'text-gray-300 hover:bg-[#165468] hover:text-white'
                    }`}
                  >
                    <span className="mr-3">{item.icon}</span>
                    <span className="flex-1">{item.title}</span>
                    
                    {item.badge && (
                      <span className={`text-xs px-2 py-1 rounded ${
                        item.badge === 'NEW' ? 'bg-green-500 text-white' : 'bg-blue-500 text-white'
                      }`}>
                        {item.badge}
                      </span>
                    )}
                    
                    {item.expandable && (
                      isExpanded ? 
                        <ChevronDown className="w-4 h-4 ml-2" /> : 
                        <ChevronRight className="w-4 h-4 ml-2" />
                    )}
                  </NavLink>
                </div>

                {/* Submenu */}
                {item.expandable && isExpanded && item.subItems && (
                  <ul className={`${isDarkMode ? 'bg-gray-800' : 'bg-[#0a2e3b]'}`}>
                    {item.subItems.map((subItem) => (
                      <li key={subItem.route}>
                        <NavLink
                          to={subItem.route}
                          className={({ isActive }) => 
                            `flex items-center p-2 pl-12 text-sm transition-colors ${
                              isActive 
                                ? isDarkMode 
                                  ? 'bg-gray-600 text-white' 
                                  : 'bg-[#165468] text-white'
                                : isDarkMode
                                  ? 'text-gray-400 hover:bg-gray-700 hover:text-white'
                                  : 'text-gray-300 hover:bg-[#165468] hover:text-white'
                            }`
                          }
                        >
                          <span className="mr-2">{subItem.icon}</span>
                          {subItem.title}
                        </NavLink>
                      </li>
                    ))}
                  </ul>
                )}
              </li>
            );
          })}
        </ul>
      </nav>

      {/* 🌙 Theme Toggle для уставших глаз */}
      <div className={`border-t p-3 ${isDarkMode ? 'border-gray-700' : 'border-[#165468]'}`}>
        <button
          onClick={() => setIsDarkMode(!isDarkMode)}
          className={`w-full p-2 rounded text-sm transition-colors ${
            isDarkMode 
              ? 'bg-gray-700 hover:bg-gray-600 text-gray-200' 
              : 'bg-[#165468] hover:bg-[#1a5a6e] text-white'
          }`}
        >
          {isDarkMode ? '☀️ Светлая тема' : '🌙 Мягкие цвета для глаз'}
        </button>
        <div className={`text-xs mt-1 opacity-70 ${isDarkMode ? 'text-gray-400' : 'text-gray-300'}`}>
          {isDarkMode ? 'Забота о ваших глазах' : 'Авто-переключение в 18:00'}
        </div>
      </div>

      {/* Back to Companies */}
      <div className={`border-t mt-auto ${isDarkMode ? 'border-gray-700' : 'border-[#165468]'}`}>
        <button 
          onClick={() => {
            localStorage.removeItem('currentCompanyId');
            window.location.href = '/account/dashboard';
          }}
          className={`w-full flex items-center p-3 transition-colors text-left ${
            isDarkMode ? 'hover:bg-gray-700' : 'hover:bg-[#165468]'
          }`}
        >
          <span className="mr-3">🚪</span>
          <span>Back to Companies</span>
        </button>
      </div>
    </div>
  );
};

export default CompanySidebar;
