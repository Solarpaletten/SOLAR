#!/bin/bash
# üê≥ –ë–´–°–¢–†–´–ô –ó–ê–ü–£–°–ö DOCKER –î–õ–Ø LINUX

echo "üéäüî•üöÄ –ë–´–°–¢–†–´–ô –ü–ï–†–ï–•–û–î MAC ‚Üí LINUX! üöÄüî•üéä"
echo ""

# ========================================
# –ü–†–û–í–ï–†–ö–ê DOCKER
# ========================================

echo "üîç –ü–†–û–í–ï–†–Ø–ï–ú DOCKER:"

if command -v docker &> /dev/null; then
    echo "‚úÖ Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    
    if docker info &> /dev/null 2>&1; then
        echo "‚úÖ Docker –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤"
        DOCKER_READY=true
    else
        echo "‚ö†Ô∏è Docker –Ω–µ –∑–∞–ø—É—â–µ–Ω"
        echo "üí° –ó–∞–ø—É—Å—Ç–∏ Docker Desktop –∏ –ø–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞"
        echo ""
        echo "üéØ –ö–û–ú–ê–ù–î–´:"
        echo "   1. –û—Ç–∫—Ä–æ–π Docker Desktop"
        echo "   2. –î–æ–∂–¥–∏—Å—å –∑–∞–ø—É—Å–∫–∞ (–∑–µ–ª—ë–Ω—ã–π –∑–Ω–∞—á–æ–∫)"
        echo "   3. –ó–∞–ø—É—Å—Ç–∏ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞"
        DOCKER_READY=false
    fi
else
    echo "‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    echo "üí° –£—Å—Ç–∞–Ω–æ–≤–∏ Docker Desktop: https://www.docker.com/products/docker-desktop/"
    DOCKER_READY=false
fi

echo ""

# ========================================
# –ê–õ–¨–¢–ï–†–ù–ê–¢–ò–í–ê: –ü–†–Ø–ú–û –ù–ê MAC
# ========================================

if [ "$DOCKER_READY" != true ]; then
    echo "üíª –ê–õ–¨–¢–ï–†–ù–ê–¢–ò–í–ê: –ó–ê–ü–£–°–ö –ù–ê MAC"
    echo ""
    echo "üéØ –ú–æ–∂–µ–º –∑–∞–ø—É—Å—Ç–∏—Ç—å —Ä–∞–∫–µ—Ç—ã –ø—Ä—è–º–æ –Ω–∞ Mac:"
    echo ""
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —É –Ω–∞—Å –µ—Å—Ç—å –≤—Å—ë –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ
    if [ -d "f" ] && [ -d "b" ]; then
        echo "‚úÖ –ü–∞–ø–∫–∏ f/ –∏ b/ –Ω–∞–π–¥–µ–Ω—ã"
        
        if command -v node &> /dev/null && command -v npm &> /dev/null; then
            echo "‚úÖ Node.js –∏ npm –≥–æ—Ç–æ–≤—ã"
            echo ""
            echo "üöÄ –ì–û–¢–û–í –ö –ó–ê–ü–£–°–ö–£ –ù–ê MAC:"
            echo "   ./scripts/launch_tabbook.sh"
            echo ""
            
            # –°–æ–∑–¥–∞—ë–º —Ä–∞–∫–µ—Ç—ã –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
            if [ ! -d "scripts/rockets" ]; then
                echo "üìÅ –°–æ–∑–¥–∞—ë–º scripts/rockets/..."
                mkdir -p scripts/rockets
                echo "‚úÖ –ü–∞–ø–∫–∞ —Å–æ–∑–¥–∞–Ω–∞"
            fi
            
            MAC_READY=true
        else
            echo "‚ùå Node.js –∏–ª–∏ npm –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
            MAC_READY=false
        fi
    else
        echo "‚ùå –ü–∞–ø–∫–∏ f/ –∏ b/ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
        MAC_READY=false
    fi
else
    MAC_READY=false
fi

echo ""

# ========================================
# –ü–†–û–°–¢–û–ô DOCKER –ó–ê–ü–£–°–ö
# ========================================

if [ "$DOCKER_READY" = true ]; then
    echo "üê≥ –ó–ê–ü–£–°–ö–ê–ï–ú LINUX –í DOCKER:"
    echo ""
    
    echo "üìã –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞:"
    echo "docker run -it --rm \\"
    echo "  -v \$(pwd):/workspace \\"
    echo "  -w /workspace \\"
    echo "  -p 5173:5173 -p 4000:4000 \\"
    echo "  node:18-alpine \\"
    echo "  sh -c 'apk add --no-cache bash git && exec bash'"
    echo ""
    
    echo "üéØ –•–æ—á–µ—à—å –∑–∞–ø—É—Å—Ç–∏—Ç—å? (y/n)"
    read -r response
    
    if [[ "$response" =~ ^[Yy]$ ]]; then
        echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º Linux –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä..."
        
        docker run -it --rm \
          -v $(pwd):/workspace \
          -w /workspace \
          -p 5173:5173 -p 4000:4000 \
          node:18-alpine \
          sh -c "
            echo 'üêß –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã...'
            apk add --no-cache bash git
            echo '‚úÖ Linux –≥–æ—Ç–æ–≤!'
            echo 'üìÅ –¢–µ–∫—É—â–∞—è –ø–∞–ø–∫–∞: '\$(pwd)
            echo 'üêß OS: '\$(cat /etc/os-release | head -1)
            echo 'üéØ –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–ø—É—Å—Ç–∏: ls -la'
            echo 'üöÄ –î–ª—è –∑–∞–ø—É—Å–∫–∞ —Ä–∞–∫–µ—Ç: ./scripts/launch_tabbook.sh'
            exec bash
          "
    fi

elif [ "$MAC_READY" = true ]; then
    echo "üíª –ó–ê–ü–£–°–ö–ê–ï–ú –ù–ê MAC:"
    echo ""
    
    echo "üéØ –•–æ—á–µ—à—å –∑–∞–ø—É—Å—Ç–∏—Ç—å —Ä–∞–∫–µ—Ç—ã –Ω–∞ Mac? (y/n)"
    read -r response
    
    if [[ "$response" =~ ^[Yy]$ ]]; then
        echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–∞ Mac..."
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ launcher
        if [ -f "scripts/launch_tabbook.sh" ]; then
            echo "‚úÖ Launcher –Ω–∞–π–¥–µ–Ω"
            chmod +x scripts/launch_tabbook.sh
            ./scripts/launch_tabbook.sh
        else
            echo "‚ö†Ô∏è Launcher –Ω–µ –Ω–∞–π–¥–µ–Ω"
            echo "üí° –°–æ–∑–¥–∞—ë–º –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π launcher..."
            
            mkdir -p scripts
            cat > scripts/launch_tabbook.sh << 'EOF'
#!/bin/bash
echo "üöÄ TabBook Launcher –Ω–∞ Mac"
echo "üí° –°–æ–∑–¥–∞—ë–º –±–∞–∑–æ–≤—ã–π TabBook –∫–æ–º–ø–æ–Ω–µ–Ω—Ç..."

mkdir -p f/src/components/tabbook
cat > f/src/components/tabbook/TabBookDemo.tsx << 'COMPONENT_EOF'
import React from 'react';

const TabBookDemo = () => {
  return (
    <div className="p-8">
      <h1 className="text-3xl font-bold">üî• TabBook MVP</h1>
      <p className="text-xl">TAB-–ë—É—Ö–≥–∞–ª—Ç–µ—Ä–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ Mac!</p>
    </div>
  );
};

export default TabBookDemo;
COMPONENT_EOF

echo "‚úÖ TabBookDemo.tsx —Å–æ–∑–¥–∞–Ω!"
echo "üéØ –°–ª–µ–¥—É—é—â–∏–π —à–∞–≥: –¥–æ–±–∞–≤–∏—Ç—å –≤ —Ä–æ—É—Ç–∏–Ω–≥"
EOF
            
            chmod +x scripts/launch_tabbook.sh
            ./scripts/launch_tabbook.sh
        fi
    fi

else
    echo "‚ùå –ù—É–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –æ–∫—Ä—É–∂–µ–Ω–∏–µ"
    echo ""
    echo "üéØ –í–ê–†–ò–ê–ù–¢–´:"
    echo "1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å Docker Desktop"
    echo "2. –£–±–µ–¥–∏—Ç—å—Å—è —á—Ç–æ –ø–∞–ø–∫–∏ f/ –∏ b/ —Å—É—â–µ—Å—Ç–≤—É—é—Ç"
    echo "3. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Node.js –µ—Å–ª–∏ –Ω—É–∂–Ω–æ"
fi

echo ""
echo "üéä –ì–û–¢–û–í –ö –°–õ–ï–î–£–Æ–©–ï–ú–£ –®–ê–ì–£!"