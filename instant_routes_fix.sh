#!/bin/bash
# ‚ö° –ú–ì–ù–û–í–ï–ù–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï ROUTES
# –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º—É —Å –ª–æ–≥–∏–Ω–æ–º –∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ–º sidebar

echo "üéäüî•‚ö° –ú–ì–ù–û–í–ï–ù–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï ROUTES! ‚ö°üî•üéä"
echo ""
echo "üéØ –ü–†–û–ë–õ–ï–ú–ê: Routes –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç sidebar –∏ –≤–µ–¥—É—Ç –Ω–∞ –ª–æ–≥–∏–Ω"
echo "üí° –†–ï–®–ï–ù–ò–ï: –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –≤ AppRouter.tsx"

cd f

echo "1Ô∏è‚É£ BACKUP –ò –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï AppRouter.tsx:"
echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"

# Backup
cp src/app/AppRouter.tsx src/app/AppRouter.tsx.before_instant_fix

# –ò—Å–ø—Ä–∞–≤–ª—è–µ–º AppRouter.tsx —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ imports –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π
cat > src/app/AppRouter.tsx << 'EOF'
import React from 'react';
import {
  BrowserRouter as Router,
  Routes,
  Route,
  Navigate,
} from 'react-router-dom';

import LoginPage from '../pages/auth/LoginPage';
import AuthGuard from '../components/account/AuthGuard';
import AccountDashboardPage from '../pages/account/dashboard/AccountDashboardPage';
import CompanyLayout from '../components/company/CompanyLayout';

// Company Pages
import DashboardPage from '../pages/company/dashboard/DashboardPage';
import ClientsPage from '../pages/company/clients/ClientsPage';
import ProductsPage from '../pages/company/products/ProductsPage';
import PurchasesPage from '../pages/company/purchases/PurchasesPage';
import SalesPage from '../pages/company/sales/SalesPage';
import WarehousePage from '../pages/company/warehouse/WarehousePage';
import ChartOfAccountsPage from '../pages/company/chart-of-accounts/ChartOfAccountsPage';
import BankingPage from '../pages/company/banking/BankingPage';
import SettingsPage from '../pages/company/settings/SettingsPage';
import TabBookDemo from '../components/tabbook/TabBookDemo';
import SolarCloudIDE from '../components/cloudide/SolarCloudIDE';

function App() {
  return (
    <Router>
      <Routes>
        {/* Public Routes */}
        <Route path="/login" element={<LoginPage />} />
        <Route path="/auth/login" element={<LoginPage />} />
        
        {/* Account Level */}
        <Route
          path="/account/dashboard"
          element={
            <AuthGuard>
              <AccountDashboardPage />
            </AuthGuard>
          }
        />

        {/* Company Level - All wrapped in CompanyLayout */}
        <Route
          path="/dashboard"
          element={
            <AuthGuard>
              <CompanyLayout>
                <DashboardPage />
              </CompanyLayout>
            </AuthGuard>
          }
        />

        <Route
          path="/clients"
          element={
            <AuthGuard>
              <CompanyLayout>
                <ClientsPage />
              </CompanyLayout>
            </AuthGuard>
          }
        />

        <Route
          path="/products"
          element={
            <AuthGuard>
              <CompanyLayout>
                <ProductsPage />
              </CompanyLayout>
            </AuthGuard>
          }
        />

        <Route
          path="/purchases"
          element={
            <AuthGuard>
              <CompanyLayout>
                <PurchasesPage />
              </CompanyLayout>
            </AuthGuard>
          }
        />

        <Route
          path="/sales"
          element={
            <AuthGuard>
              <CompanyLayout>
                <SalesPage />
              </CompanyLayout>
            </AuthGuard>
          }
        />

        <Route
          path="/warehouse"
          element={
            <AuthGuard>
              <CompanyLayout>
                <WarehousePage />
              </CompanyLayout>
            </AuthGuard>
          }
        />

        <Route
          path="/chart-of-accounts"
          element={
            <AuthGuard>
              <CompanyLayout>
                <ChartOfAccountsPage />
              </CompanyLayout>
            </AuthGuard>
          }
        />

        <Route
          path="/banking"
          element={
            <AuthGuard>
              <CompanyLayout>
                <BankingPage />
              </CompanyLayout>
            </AuthGuard>
          }
        />

        <Route
          path="/tabbook"
          element={
            <AuthGuard>
              <CompanyLayout>
                <TabBookDemo />
              </CompanyLayout>
            </AuthGuard>
          }
        />

        <Route
          path="/cloudide"
          element={
            <AuthGuard>
              <CompanyLayout>
                <SolarCloudIDE />
              </CompanyLayout>
            </AuthGuard>
          }
        />

        <Route
          path="/settings"
          element={
            <AuthGuard>
              <CompanyLayout>
                <SettingsPage />
              </CompanyLayout>
            </AuthGuard>
          }
        />

        {/* Redirects */}
        <Route path="/" element={<Navigate to="/account/dashboard" />} />
        <Route path="*" element={<Navigate to="/login" />} />
      </Routes>
    </Router>
  );
}

export default App;
EOF

echo "‚úÖ AppRouter.tsx –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏—Å–ø—Ä–∞–≤–ª–µ–Ω!"

echo ""
echo "2Ô∏è‚É£ –ü–†–û–í–ï–†–Ø–ï–ú –ò –°–û–ó–î–ê–Å–ú –ù–ï–î–û–°–¢–ê–Æ–©–ò–ï –§–ê–ô–õ–´:"
echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∫–∏–µ —Ñ–∞–π–ª—ã —Å—É—â–µ—Å—Ç–≤—É—é—Ç
echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã:"

FILES_TO_CHECK=(
  "src/pages/company/warehouse/WarehousePage.tsx"
  "src/pages/company/sales/SalesPage.tsx"
  "src/components/company/CompanyLayout.tsx"
)

for file in "${FILES_TO_CHECK[@]}"; do
  if [ -f "$file" ]; then
    echo "‚úÖ $file - –Ω–∞–π–¥–µ–Ω"
  else
    echo "‚ùå $file - –ù–ï –ù–ê–ô–î–ï–ù!"
    
    # –°–æ–∑–¥–∞—ë–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ —Ñ–∞–π–ª—ã
    if [[ "$file" == *"WarehousePage.tsx" ]]; then
      mkdir -p src/pages/company/warehouse
      echo "üìù –°–æ–∑–¥–∞—ë–º –ø—Ä–æ—Å—Ç—É—é WarehousePage..."
      cat > "$file" << 'WAREHOUSE_EOF'
import React from 'react';

const WarehousePage: React.FC = () => {
  return (
    <div className="p-6">
      <h1 className="text-2xl font-bold text-gray-900 mb-4">
        üè≠ Warehouse Management
      </h1>
      <div className="bg-white rounded-lg shadow p-6">
        <p className="text-gray-600 mb-4">
          Warehouse inventory management - integration with Purchases and Sales
        </p>
        <div className="bg-blue-50 border border-blue-200 rounded-lg p-4">
          <p className="text-blue-800">
            üì¶ Current Stock: RESIDUES TECHNICAL OIL - 33 T
          </p>
        </div>
      </div>
    </div>
  );
};

export default WarehousePage;
WAREHOUSE_EOF
      echo "‚úÖ WarehousePage —Å–æ–∑–¥–∞–Ω–∞"
    fi
    
    if [[ "$file" == *"SalesPage.tsx" ]]; then
      mkdir -p src/pages/company/sales
      echo "üìù –°–æ–∑–¥–∞—ë–º –ø—Ä–æ—Å—Ç—É—é SalesPage..."
      cat > "$file" << 'SALES_EOF'
import React from 'react';

const SalesPage: React.FC = () => {
  return (
    <div className="p-6">
      <h1 className="text-2xl font-bold text-gray-900 mb-4">
        üí∞ Sales Management
      </h1>
      <div className="bg-white rounded-lg shadow p-6">
        <p className="text-gray-600 mb-4">
          Sales order management - reduces warehouse inventory
        </p>
        <div className="bg-green-50 border border-green-200 rounded-lg p-4">
          <p className="text-green-800">
            üí∞ Recent Sales: 10 T sold at ‚Ç¨800/T = ‚Ç¨8,000
          </p>
        </div>
      </div>
    </div>
  );
};

export default SalesPage;
SALES_EOF
      echo "‚úÖ SalesPage —Å–æ–∑–¥–∞–Ω–∞"
    fi
  fi
done

echo ""
echo "3Ô∏è‚É£ –û–°–¢–ê–ù–ê–í–õ–ò–í–ê–ï–ú –ò –ü–ï–†–ï–ó–ê–ü–£–°–ö–ê–ï–ú DEV SERVER:"
echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º dev server
echo "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º dev server..."
pkill -f "vite.*dev" 2>/dev/null || echo "Dev server –Ω–µ –±—ã–ª –∑–∞–ø—É—â–µ–Ω"

# –û—á–∏—â–∞–µ–º –∫—ç—à–∏
rm -rf node_modules/.vite 2>/dev/null
rm -rf .vite 2>/dev/null

echo "üîÑ –ö—ç—à–∏ –æ—á–∏—â–µ–Ω—ã"

echo ""
echo "üéäüî•‚ö° –ú–ì–ù–û–í–ï–ù–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û! ‚ö°üî•üéä"
echo ""
echo "‚úÖ –ß–¢–û –ò–°–ü–†–ê–í–õ–ï–ù–û:"
echo "   üîó –í—Å–µ routes –æ–±—ë—Ä–Ω—É—Ç—ã –≤ CompanyLayout"
echo "   üìÅ –ù–µ–¥–æ—Å—Ç–∞—é—â–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã"  
echo "   üîÑ –ö—ç—à–∏ –æ—á–∏—â–µ–Ω—ã"
echo "   üõë Dev server –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
echo ""
echo "üöÄ –ö–û–ú–ê–ù–î–´ –î–õ–Ø –ó–ê–ü–£–°–ö–ê:"
echo "   cd f && npm run dev"
echo ""
echo "üéØ –ß–¢–û –î–û–õ–ñ–ù–û –†–ê–ë–û–¢–ê–¢–¨:"
echo "   ‚úÖ http://localhost:5173/dashboard ‚Üí Dashboard + Sidebar"
echo "   ‚úÖ http://localhost:5173/purchases ‚Üí Purchases + Sidebar"
echo "   ‚úÖ http://localhost:5173/warehouse ‚Üí Warehouse + Sidebar"
echo "   ‚úÖ http://localhost:5173/sales ‚Üí Sales + Sidebar"
echo "   ‚úÖ –í—Å–µ submenu –¥–æ–ª–∂–Ω—ã —Ä–∞–±–æ—Ç–∞—Ç—å"
echo ""
echo "üí´ –ó–ê–ü–£–°–ö–ê–ô –ò –¢–ï–°–¢–ò–†–£–ô NAVIGATION!"
echo "üèÜ SIDEBAR –ë–£–î–ï–¢ –í–ò–î–ï–ù –ù–ê –í–°–ï–• –°–¢–†–ê–ù–ò–¶–ê–•!"