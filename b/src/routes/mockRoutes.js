const express = require('express');
const router = express.Router();
const mockAuthController = require('../controllers/mockAuthController');

// üß™ MOCK ROUTES –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –±–µ–∑ –Ω–∞—Å—Ç–æ—è—â–µ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏

// –ú–æ–∫-–≤—Ö–æ–¥ (—Å–æ–∑–¥–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–æ–∫–µ–Ω)
router.post('/login', mockAuthController.mockLogin);

// –ü–æ–ª—É—á–∏—Ç—å –≥–æ—Ç–æ–≤—ã–π —Ç–æ–∫–µ–Ω –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
router.get('/token', mockAuthController.getTestToken);

// –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç
router.get('/test', (req, res) => {
  res.json({
    message: 'üß™ Mock API —Ä–∞–±–æ—Ç–∞–µ—Ç!',
    endpoints: {
      mockLogin: 'POST /api/mock/login',
      getToken: 'GET /api/mock/token'
    },
    instructions: '–°–Ω–∞—á–∞–ª–∞ –≤—ã–∑–æ–≤–∏ /api/mock/login —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'
  });
});

module.exports = router;
