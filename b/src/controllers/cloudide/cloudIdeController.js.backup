// 🚀 CloudIDE Controller - Fixed ESM Import Issue
const express = require('express');


const cloudIdeController = {
  // 🌐 Get repository structure
  getRepoStructure: async (req, res) => {
    try {
      const { owner, repo } = req.query;
      
      if (!owner || !repo) {
        return res.status(400).json({
          success: false,
          error: 'Owner and repo are required'
        });
      }

      // Mock response for now - replace with actual GitHub API call
      const mockStructure = {
        name: repo,
        owner: owner,
        files: [
          { name: 'README.md', type: 'file', path: 'README.md' },
          { name: 'src', type: 'directory', path: 'src' },
          { name: 'package.json', type: 'file', path: 'package.json' }
        ]
      };

      res.json({
        success: true,
        data: mockStructure,
        message: `Repository structure for ${owner}/${repo} loaded`
      });

    } catch (error) {
      console.error('Error in getRepoStructure:', error);
      res.status(500).json({
        success: false,
        error: 'Failed to get repository structure',
        details: error.message
      });
    }
  },

  // 📄 Get file content
  getFileContent: async (req, res) => {
    try {
      const { owner, repo, path } = req.query;
      
      if (!owner || !repo || !path) {
        return res.status(400).json({
          success: false,
          error: 'Owner, repo, and path are required'
        });
      }

      // Mock response - replace with actual file reading
      const mockContent = {
        path: path,
        content: '// Sample file content\nconsole.log("File loaded successfully");',
        encoding: 'utf8'
      };

      res.json({
        success: true,
        data: mockContent,
        message: `File ${path} loaded successfully`
      });

    } catch (error) {
      console.error('Error in getFileContent:', error);
      res.status(500).json({
        success: false,
        error: 'Failed to get file content',
        details: error.message
      });
    }
  },

  // 💾 Save file content
  saveFileContent: async (req, res) => {
    try {
      const { owner, repo, path, content, message } = req.body;
      
      if (!owner || !repo || !path || !content) {
        return res.status(400).json({
          success: false,
          error: 'Owner, repo, path, and content are required'
        });
      }

      // Mock save operation
      res.json({
        success: true,
        data: {
          path: path,
          message: message || 'File updated successfully',
          sha: 'mock_sha_' + Date.now()
        },
        message: `File ${path} saved successfully`
      });

    } catch (error) {
      console.error('Error in saveFileContent:', error);
      res.status(500).json({
        success: false,
        error: 'Failed to save file content',
        details: error.message
      });
    }
  }
};

module.exports = {
  createProject,
  cloudIdeController,
};